#!/bin/sh
#
# PROVIDE: casket
# REQUIRE: networking
# KEYWORD: shutdown

#
# Add the following lines to /etc/rc.conf to enable casket:
# casket_enable (bool):        Set to "NO" by default.
#                             Set it to "YES" to enable casket
#
# casket_cert_email (str):     Set to "" by default.
#                             Defines the SSL certificate issuer email. By providing an
#                             email address you automatically agree to letsencrypt.org's
#                             general terms and conditions
#
# casket_bin_path (str):       Set to "/usr/local/bin/casket" by default.
#                             Provides the path to the casket server executable
#
# casket_cpu (str):            Set to "99%" by default.
#                             Configures, how much CPU capacity casket may gain
#
# casket_config_path (str):    Set to "/usr/local/www/Casketfile" by default.
#                             Defines the path for the configuration file casket will load on boot
#
# casket_user (str):           Set to "root" by default.
#                             Defines the user that casket will run on
#
# casket_group (str):  	      Set to "wheel" by default.
#                             Defines the group that casket files will be attached to
#
# casket_syslog_facility (str) Set to "local7" by default.
#                             Defines the syslog facility used to log output from the casket process.
#                             This is NOT the web access log.
#
# casket_syslog_level (str)    Set to "notice" by default.
#                             Defines the syslog level used to log output from the casket process.
#                             This is NOT the web access log.
#
# casket_env (str)	      Set to "" by default.
#			      This allows environment variable to be set that may be required, for example when using "DNS Challenge" account credentials are required.
#			      e.g. (in your rc.conf)   casket_env="CLOUDFLARE_EMAIL=me@domain.com CLOUDFLARE_API_KEY=my_api_key"
#

. /etc/rc.subr

name="casket"
rcvar="${name}_enable"

load_rc_config ${name}

: ${casket_enable:="NO"}
: ${casket_cert_email=""}
: ${casket_bin_path="/usr/local/bin/casket"}
: ${casket_cpu="99%"} # was a bug for me that caused a crash within jails
: ${casket_config_path="/usr/local/www/Casketfile"}
: ${casket_syslog_facility="local7"}
: ${casket_syslog_level="notice"}
: ${casket_user="root"}
: ${casket_group="wheel"}
: ${casket_flags=""}
: ${casket_options="-cpu ${casket_cpu} -log stdout -conf ${casket_config_path} -agree -email ${casket_cert_email} ${casket_flags}"}

if [ "$casket_cert_email" = "" ]
then
    echo "rc variable \$casket_cert_email is not set. Please provide a valid SSL certificate issuer email."
    exit 1
fi

pidfile="/var/run/${name}.pid"
procname="${casket_bin_path}" #enabled builtin pid checking for start / stop
command="/usr/sbin/daemon"
command_args="-p ${pidfile} -T ${name} -l ${casket_syslog_facility} -s ${casket_syslog_level} /usr/bin/env ${casket_env} ${procname} ${casket_options} < /dev/null"

start_precmd="casket_startprecmd"

casket_startprecmd()
{
	# Clear flags provided by casket_flags to prevent them being passed to daemon(8)
	rc_flags=""

	if [ ! -e "${pidfile}" ]; then
		install -m 644 -o "${casket_user}" -g "${casket_group}" "/dev/null" "${pidfile}"
	fi
}

required_files="${casket_config_path}"

run_rc_command "$1"

